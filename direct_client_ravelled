#!/usr/bin/python3
#+
# DBussy example -- a client which connects to the corresponding direct_server
# without going through the D-Bus daemon. Invoke this script as follows:
#
#     direct_client_ravelled «n1» «n2»
#
# where «n1» and «n2» are two integers. It will send a request to the server
# to add the integers together, and return the result, which will be printed.
#
# Copyright 2021 by Lawrence D'Oliveiro <ldo@geek-central.gen.nz>. This
# script is licensed CC0
# <https://creativecommons.org/publicdomain/zero/1.0/>; do with it
# what you will.
#-

import sys
import getopt
import dbussy as dbus
from dbussy import \
    DBUS, \
    Introspection
import ravel

server_socket_name = "unix:path=/tmp/direct_server_demo"
server_interface_name = "com.example.direct_server"
ServerInterface = ravel.def_proxy_interface \
  (
    ravel.INTERFACE.CLIENT,
    name = "ServerInterface",
    introspected =
        Introspection.Interface
          (
            name = server_interface_name,
            methods =
                [
                    Introspection.Interface.Method
                      (
                        name = "add",
                        args =
                            [
                                Introspection.Interface.Method.Arg
                                  (
                                    name = "addend",
                                    type = dbus.BasicType(dbus.TYPE.INT32),
                                    direction = Introspection.DIRECTION.IN
                                  ),
                                Introspection.Interface.Method.Arg
                                  (
                                    name = "augend",
                                    type = dbus.BasicType(dbus.TYPE.INT32),
                                    direction = Introspection.DIRECTION.IN
                                  ),
                                Introspection.Interface.Method.Arg
                                  (
                                    name = "sum",
                                    type = dbus.BasicType(dbus.TYPE.INT32),
                                    direction = Introspection.DIRECTION.OUT
                                  ),
                            ],
                      ),
                ],
          ),
    is_async = True
  )

loop = dbus.get_event_loop()

async def mainline(addend, augend) :
    conn = await ravel.connect_server_async(address = server_socket_name, private = True)
    sys.stdout.write("connected to server\n")
    intf = ServerInterface \
      (
        connection = conn.connection,
        dest = "com.example.dontcare", # no D-Bus daemon to care
      )["/"]
    sum, = await intf.add(addend, augend)
    sys.stdout.write("%d + %d = %d\n" % (addend, augend, sum))
    conn.connection.close()
#end mainline

opts, args = getopt.getopt \
  (
    sys.argv[1:],
    "",
    []
  )
if len(args) != 2 :
    raise getopt.GetoptError("expecting 2 args, the numbers to add")
#end if

loop.run_until_complete(mainline(int(args[0]), int(args[1])))
