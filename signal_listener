#!/usr/bin/python3
#+
# DBussy example -- listen for signals on D-Bus using the asyncio event loop.
#
# Copyright 2017 by Lawrence D'Oliveiro <ldo@geek-central.gen.nz>. This
# script is licensed CC0
# <https://creativecommons.org/publicdomain/zero/1.0/>; do with it
# what you will.
#-

import sys
import signal
import getopt
import dbussy as dbus
from dbussy import \
    DBUS

#+
# Callbacks
#-

def message_filter(connection, message, data) :
    if message.type == DBUS.MESSAGE_TYPE_SIGNAL :
        sys.stdout.write \
          (
                "%s.%s[%s](%s)\n"
            %
                (
                    message.interface,
                    message.member,
                    repr(message.path),
                    ", ".join(repr(arg) for arg in message.objects)
                )
          )
    #end if
    return \
        DBUS.HANDLER_RESULT_HANDLED
#end message_filter

#+
# Mainline
#-

signal.signal(signal.SIGINT, signal.SIG_DFL) # abort without raising KeyboardInterrupt on CTRL/C

if len(sys.argv) != 2 :
    raise getopt.GetoptError("usage: %s session|system" % sys.argv[0])
#end if
bus_spec = sys.argv[1]

conn = dbus.Connection.bus_get \
  (
    {"session" : DBUS.BUS_SESSION, "system" : DBUS.BUS_SYSTEM}[bus_spec.lower()],
    private = False
  )
conn.attach_asyncio()
conn.add_filter(message_filter, None)
conn.bus_add_match("type=signal")
conn.loop.run_forever()
